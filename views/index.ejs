<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Backend API Documentation</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                background: #f9f9f9;
                color: #333;
                margin: 0;
                padding: 2rem;
            }
            h1,
            h2,
            h3 {
                color: #0b8342;
            }
            code {
                background: #eee;
                padding: 2px 6px;
                border-radius: 4px;
            }
            .section {
                background: white;
                padding: 1.5rem;
                border-radius: 10px;
                margin-bottom: 1.5rem;
                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
            }
            table {
                width: 100%;
                border-collapse: collapse;
                margin-top: 1rem;
            }
            th,
            td {
                padding: 0.5rem;
                border: 1px solid #ccc;
            }
            th {
                background-color: #f2f2f2;
            }
        </style>
    </head>
    <body>
        <h1>SUI Build-A-Ton Backend CRUD API Documentation - Team Legion</h1>

        <div class="section">
            <h2>Overview</h2>
            <p>
                This is a simple CRUD REST API with basic authentication for
                token watchlist management functionality using Node.js, Express,
                MongoDB, and TypeScript.
            </p>
        </div>

        <div class="section">
            <h2>Authentication</h2>
            <h3>Register</h3>
            <p><strong>POST</strong> <code>/api/v1/auth/register</code></p>
            <p>Registers a new user with email and password.</p>

            <h3>Login</h3>
            <p><strong>POST</strong> <code>/api/v1/auth/login</code></p>
            <p>Authenticates a user and returns a JWT token.</p>
        </div>

        <div class="section">
            <h2>Protected Routes - Watchlist</h2>
            <p>
                All routes below require the user to be authenticated (bearer
                token in header -
                <i>This token is returned in the register or login endpoints</i
                >).
            </p>

            <h3>Create Item</h3>
            <p><strong>POST</strong> <code>/api/v1/watchlist/</code></p>
            <p>Add a new token to your watchlist.</p>

            <h3>Get All Items</h3>
            <p><strong>GET</strong> <code>/api/v1/watchlist/</code></p>
            <p>Retrieve all items for the authenticated user.</p>

            <h3>Update Item</h3>
            <p><strong>PATCH</strong> <code>/api/v1/watchlist/:id</code></p>
            <p>Update a watchlist item. Supports partial updates.</p>

            <h3>Delete Item</h3>
            <p><strong>DELETE</strong> <code>/api/v1/watchlist/:id</code></p>
            <p>Remove an item from the watchlist.</p>
        </div>

        <div class="section">
            <h2>Models</h2>
            <h3>User</h3>
            <ul>
                <li><code>email</code> - string</li>
                <li><code>password</code> - hashed string</li>
            </ul>

            <h3>WatchlistItem</h3>
            <ul>
                <li><code>userId</code> - ObjectId (ref to User)</li>
                <li><code>tokenSymbol</code> - string (optional)</li>
                <li><code>tokenName</code> - string (optional)</li>
                <li><code>tokenAddress</code> - string (optional)</li>
                <li><code>notes</code> - string (optional)</li>
                <li><code>createdAt</code> - auto timestamp</li>
                <li><code>modifiedAt</code> - auto timestamp</li>
            </ul>
        </div>

        <div class="section">
            <h2>Authentication Middleware</h2>
            <p>
                The <code>AuthMiddleware</code> middleware checks for a valid
                JWT in the request header and attaches user information to the
                request object.
            </p>
        </div>

        <div class="section">
            <h2>Technologies Used</h2>
            <ul>
                <li>Node.js + Express</li>
                <li>MongoDB + Mongoose</li>
                <li>TypeScript</li>
                <li>bcryptjs</li>
                <li>jsonwebtoken</li>
            </ul>
        </div>
        <div class="section">
            <h2>Env template vars</h2>
            <ul>
                <li>APP_PORT</li>
                <li>JWT_KEY</li>
                <li>DB_URL</li>
                <li>DB_NAME</li>
            </ul>
        </div>
    </body>
</html>
